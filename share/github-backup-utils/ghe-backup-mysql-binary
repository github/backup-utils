#!/usr/bin/env bash
#/ Usage: ghe-backup-mysql-binary <host>
#/ Backup MySQL from a GitHub instance using binary backup strategy.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-backup command.
set -e

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
. "$( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config"

bm_start "$(basename $0)"

# Perform a host-check and establish the remote version in GHE_REMOTE_VERSION.
ghe_remote_version_required "$GHE_HOSTNAME"

echo "Backing up MySQL database using binary backup strategy ..."

if [ -n "$GHE_MYSQL_BACKGROUD_TRANSFER" ]; then
  # ghe-mysql-generate-seed will export a MySQL binary backup
  seed_file=$(ssh_mysql_master -- "sudo /usr/local/share/enterprise/ghe-mysql-generate-seed --force 2>/dev/null")
  echo "Database seed $seed_file is generated on mysql primary node, path saved in $GHE_SNAPSHOT_DIR/mysql_seed_file." 1>&3
  # Save the Pid to a file
  echo "$seed_file" > "$GHE_SNAPSHOT_DIR/mysql_seed_file"
  # We need to transfer the seed file in background in parent shell otherwise it is impossible to track it
else
  echo "set -o pipefail; ghe-export-mysql" |
    ghe-ssh "$GHE_HOSTNAME" -- /bin/bash > "$GHE_SNAPSHOT_DIR/mysql.sql.gz"
fi

echo "NO_ADDITIONAL_COMPRESSION" > "$GHE_SNAPSHOT_DIR/mysql-binary-backup-sentinel"

bm_end "$(basename $0)"
