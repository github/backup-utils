#!/usr/bin/env bash
#/ Usage: ghe-backup-redis
#/ Take a snapshot of all Redis data. This is needed because older versions of
#/ the remote side ghe-export-redis command use a blocking SAVE instead of a
#/ non-blocking BGSAVE.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-backup command.
set -e

# Bring in the backup configuration
. $( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config

bm_start "$(basename $0)"

# Perform a host-check and establish GHE_REMOTE_XXX variables.
ghe_remote_version_required "$GHE_HOSTNAME"

# Force a redis BGSAVE, and wait for it to complete.
sudo=
[ "$GHE_VERSION_MAJOR" -ge 2 ] && sudo="sudo"
ghe-ssh "$GHE_HOSTNAME" /bin/bash <<EOF
    set -e
    timestamp=\$(redis-cli LASTSAVE)
    for i in \$(seq 10); do
      if ! redis-cli BGSAVE | grep -q ERR; then
        break
      fi
      sleep 15
    done
    for n in \$(seq 3600); do
      if [ "\$(redis-cli LASTSAVE)" != "\$timestamp" ]; then
        break
      fi
      sleep 1
    done
    [ "\$(redis-cli LASTSAVE)" != "\$timestamp" ] # exits 1 if bgsave didn't work
    $sudo cat '$GHE_REMOTE_DATA_USER_DIR/redis/dump.rdb'
EOF

bm_end "$(basename $0)"
